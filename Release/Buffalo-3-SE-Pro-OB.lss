
Buffalo-3-SE-Pro-OB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000007de  00000872  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  00000872  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000872  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000884  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000008c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000504  00000000  00000000  00000980  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000460  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047f  00000000  00000000  000012e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001eb  00000000  00000000  00001763  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	1d c0       	rjmp	.+58     	; 0x3e <__bad_interrupt>
   4:	1c c0       	rjmp	.+56     	; 0x3e <__bad_interrupt>
   6:	1b c0       	rjmp	.+54     	; 0x3e <__bad_interrupt>
   8:	1a c0       	rjmp	.+52     	; 0x3e <__bad_interrupt>
   a:	19 c0       	rjmp	.+50     	; 0x3e <__bad_interrupt>
   c:	18 c0       	rjmp	.+48     	; 0x3e <__bad_interrupt>
   e:	17 c0       	rjmp	.+46     	; 0x3e <__bad_interrupt>
  10:	16 c0       	rjmp	.+44     	; 0x3e <__bad_interrupt>
  12:	15 c0       	rjmp	.+42     	; 0x3e <__bad_interrupt>
  14:	14 c0       	rjmp	.+40     	; 0x3e <__bad_interrupt>
  16:	13 c0       	rjmp	.+38     	; 0x3e <__bad_interrupt>
  18:	12 c0       	rjmp	.+36     	; 0x3e <__bad_interrupt>
  1a:	11 c0       	rjmp	.+34     	; 0x3e <__bad_interrupt>
  1c:	10 c0       	rjmp	.+32     	; 0x3e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_clear_bss>:
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	01 c0       	rjmp	.+2      	; 0x34 <.do_clear_bss_start>

00000032 <.do_clear_bss_loop>:
  32:	1d 92       	st	X+, r1

00000034 <.do_clear_bss_start>:
  34:	ac 36       	cpi	r26, 0x6C	; 108
  36:	b2 07       	cpc	r27, r18
  38:	e1 f7       	brne	.-8      	; 0x32 <.do_clear_bss_loop>
  3a:	1f d1       	rcall	.+574    	; 0x27a <main>
  3c:	ce c3       	rjmp	.+1948   	; 0x7da <_exit>

0000003e <__bad_interrupt>:
  3e:	e0 cf       	rjmp	.-64     	; 0x0 <__vectors>

00000040 <cmp_chars>:
  40:	fc 01       	movw	r30, r24
  42:	80 81       	ld	r24, Z
  44:	fb 01       	movw	r30, r22
  46:	90 81       	ld	r25, Z
  48:	89 1b       	sub	r24, r25
  4a:	99 0b       	sbc	r25, r25
  4c:	08 95       	ret

0000004e <i2cSendByte>:
  4e:	1f 93       	push	r17
  50:	cf 93       	push	r28
  52:	df 93       	push	r29
  54:	18 2f       	mov	r17, r24
  56:	d6 2f       	mov	r29, r22
  58:	c4 2f       	mov	r28, r20
  5a:	81 2f       	mov	r24, r17
  5c:	74 d1       	rcall	.+744    	; 0x346 <i2c_start>
  5e:	81 11       	cpse	r24, r1
  60:	fc cf       	rjmp	.-8      	; 0x5a <i2cSendByte+0xc>
  62:	8d 2f       	mov	r24, r29
  64:	62 d1       	rcall	.+708    	; 0x32a <i2c_write>
  66:	8c 2f       	mov	r24, r28
  68:	60 d1       	rcall	.+704    	; 0x32a <i2c_write>
  6a:	df 91       	pop	r29
  6c:	cf 91       	pop	r28
  6e:	1f 91       	pop	r17
  70:	47 c1       	rjmp	.+654    	; 0x300 <i2c_stop>

00000072 <i2cReceiveByte>:
  72:	cf 93       	push	r28
  74:	df 93       	push	r29
  76:	c8 2f       	mov	r28, r24
  78:	d6 2f       	mov	r29, r22
  7a:	8c 2f       	mov	r24, r28
  7c:	64 d1       	rcall	.+712    	; 0x346 <i2c_start>
  7e:	88 23       	and	r24, r24
  80:	39 f0       	breq	.+14     	; 0x90 <i2cReceiveByte+0x1e>
  82:	8f ec       	ldi	r24, 0xCF	; 207
  84:	97 e0       	ldi	r25, 0x07	; 7
  86:	01 97       	sbiw	r24, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <i2cReceiveByte+0x14>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <i2cReceiveByte+0x1a>
  8c:	00 00       	nop
  8e:	f5 cf       	rjmp	.-22     	; 0x7a <i2cReceiveByte+0x8>
  90:	8d 2f       	mov	r24, r29
  92:	4b d1       	rcall	.+662    	; 0x32a <i2c_write>
  94:	35 d1       	rcall	.+618    	; 0x300 <i2c_stop>
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	8c 0f       	add	r24, r28
  9a:	55 d1       	rcall	.+682    	; 0x346 <i2c_start>
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	84 d1       	rcall	.+776    	; 0x3a8 <i2c_read>
  a0:	c8 2f       	mov	r28, r24
  a2:	2e d1       	rcall	.+604    	; 0x300 <i2c_stop>
  a4:	8c 2f       	mov	r24, r28
  a6:	df 91       	pop	r29
  a8:	cf 91       	pop	r28
  aa:	08 95       	ret

000000ac <setVolume>:
  ac:	cf 93       	push	r28
  ae:	cf e7       	ldi	r28, 0x7F	; 127
  b0:	c8 1b       	sub	r28, r24
  b2:	ce 37       	cpi	r28, 0x7E	; 126
  b4:	08 f0       	brcs	.+2      	; 0xb8 <setVolume+0xc>
  b6:	cf ef       	ldi	r28, 0xFF	; 255
  b8:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <lastVol>
  bc:	8c 17       	cp	r24, r28
  be:	21 f0       	breq	.+8      	; 0xc8 <setVolume+0x1c>
  c0:	4c 2f       	mov	r20, r28
  c2:	60 e1       	ldi	r22, 0x10	; 16
  c4:	80 e9       	ldi	r24, 0x90	; 144
  c6:	c3 df       	rcall	.-122    	; 0x4e <i2cSendByte>
  c8:	c0 93 69 00 	sts	0x0069, r28	; 0x800069 <lastVol>
  cc:	cf 91       	pop	r28
  ce:	08 95       	ret

000000d0 <getVolume>:
  d0:	e0 e6       	ldi	r30, 0x60	; 96
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	36 9a       	sbi	0x06, 6	; 6
  d8:	36 99       	sbic	0x06, 6	; 6
  da:	10 c0       	rjmp	.+32     	; 0xfc <getVolume+0x2c>
  dc:	81 50       	subi	r24, 0x01	; 1
  de:	31 96       	adiw	r30, 0x01	; 1
  e0:	81 11       	cpse	r24, r1
  e2:	f9 cf       	rjmp	.-14     	; 0xd6 <getVolume+0x6>
  e4:	20 e2       	ldi	r18, 0x20	; 32
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	41 e0       	ldi	r20, 0x01	; 1
  ea:	50 e0       	ldi	r21, 0x00	; 0
  ec:	68 e0       	ldi	r22, 0x08	; 8
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	80 e6       	ldi	r24, 0x60	; 96
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	b6 d1       	rcall	.+876    	; 0x462 <qsort>
  f6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <_edata+0x4>
  fa:	08 95       	ret
  fc:	95 b1       	in	r25, 0x05	; 5
  fe:	96 95       	lsr	r25
 100:	90 83       	st	Z, r25
 102:	ea cf       	rjmp	.-44     	; 0xd8 <getVolume+0x8>

00000104 <configureDAC>:
 104:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <sw1>
 108:	80 ff       	sbrs	r24, 0
 10a:	04 c0       	rjmp	.+8      	; 0x114 <configureDAC+0x10>
 10c:	40 e1       	ldi	r20, 0x10	; 16
 10e:	6a e0       	ldi	r22, 0x0A	; 10
 110:	80 e9       	ldi	r24, 0x90	; 144
 112:	9d df       	rcall	.-198    	; 0x4e <i2cSendByte>
 114:	44 e0       	ldi	r20, 0x04	; 4
 116:	61 e0       	ldi	r22, 0x01	; 1
 118:	80 e9       	ldi	r24, 0x90	; 144
 11a:	99 df       	rcall	.-206    	; 0x4e <i2cSendByte>
 11c:	4c e3       	ldi	r20, 0x3C	; 60
 11e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <sw2>
 122:	80 fd       	sbrc	r24, 0
 124:	4c e7       	ldi	r20, 0x7C	; 124
 126:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <sw1>
 12a:	98 2f       	mov	r25, r24
 12c:	96 95       	lsr	r25
 12e:	93 70       	andi	r25, 0x03	; 3
 130:	91 30       	cpi	r25, 0x01	; 1
 132:	09 f4       	brne	.+2      	; 0x136 <configureDAC+0x32>
 134:	4e c0       	rjmp	.+156    	; 0x1d2 <configureDAC+0xce>
 136:	93 30       	cpi	r25, 0x03	; 3
 138:	09 f4       	brne	.+2      	; 0x13c <configureDAC+0x38>
 13a:	4e c0       	rjmp	.+156    	; 0x1d8 <configureDAC+0xd4>
 13c:	4c 7f       	andi	r20, 0xFC	; 252
 13e:	86 95       	lsr	r24
 140:	86 95       	lsr	r24
 142:	86 95       	lsr	r24
 144:	83 70       	andi	r24, 0x03	; 3
 146:	81 30       	cpi	r24, 0x01	; 1
 148:	09 f4       	brne	.+2      	; 0x14c <configureDAC+0x48>
 14a:	48 c0       	rjmp	.+144    	; 0x1dc <configureDAC+0xd8>
 14c:	82 30       	cpi	r24, 0x02	; 2
 14e:	09 f4       	brne	.+2      	; 0x152 <configureDAC+0x4e>
 150:	4a c0       	rjmp	.+148    	; 0x1e6 <configureDAC+0xe2>
 152:	4c 63       	ori	r20, 0x3C	; 60
 154:	62 e0       	ldi	r22, 0x02	; 2
 156:	80 e9       	ldi	r24, 0x90	; 144
 158:	7a df       	rcall	.-268    	; 0x4e <i2cSendByte>
 15a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <sw2>
 15e:	44 e0       	ldi	r20, 0x04	; 4
 160:	80 ff       	sbrs	r24, 0
 162:	40 e0       	ldi	r20, 0x00	; 0
 164:	64 e0       	ldi	r22, 0x04	; 4
 166:	80 e9       	ldi	r24, 0x90	; 144
 168:	72 df       	rcall	.-284    	; 0x4e <i2cSendByte>
 16a:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <sw1>
 16e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <sw2>
 172:	86 95       	lsr	r24
 174:	86 70       	andi	r24, 0x06	; 6
 176:	40 7e       	andi	r20, 0xE0	; 224
 178:	48 2b       	or	r20, r24
 17a:	67 e0       	ldi	r22, 0x07	; 7
 17c:	80 e9       	ldi	r24, 0x90	; 144
 17e:	67 df       	rcall	.-306    	; 0x4e <i2cSendByte>
 180:	40 e8       	ldi	r20, 0x80	; 128
 182:	68 e0       	ldi	r22, 0x08	; 8
 184:	80 e9       	ldi	r24, 0x90	; 144
 186:	63 df       	rcall	.-314    	; 0x4e <i2cSendByte>
 188:	48 e1       	ldi	r20, 0x18	; 24
 18a:	69 e0       	ldi	r22, 0x09	; 9
 18c:	80 e9       	ldi	r24, 0x90	; 144
 18e:	5f df       	rcall	.-322    	; 0x4e <i2cSendByte>
 190:	40 e3       	ldi	r20, 0x30	; 48
 192:	6b e0       	ldi	r22, 0x0B	; 11
 194:	80 e9       	ldi	r24, 0x90	; 144
 196:	5b df       	rcall	.-330    	; 0x4e <i2cSendByte>
 198:	40 91 6a 00 	lds	r20, 0x006A	; 0x80006a <sw2>
 19c:	42 95       	swap	r20
 19e:	4f 70       	andi	r20, 0x0F	; 15
 1a0:	09 f4       	brne	.+2      	; 0x1a4 <configureDAC+0xa0>
 1a2:	45 e0       	ldi	r20, 0x05	; 5
 1a4:	84 2f       	mov	r24, r20
 1a6:	82 95       	swap	r24
 1a8:	80 7f       	andi	r24, 0xF0	; 240
 1aa:	48 2b       	or	r20, r24
 1ac:	6c e0       	ldi	r22, 0x0C	; 12
 1ae:	80 e9       	ldi	r24, 0x90	; 144
 1b0:	4e df       	rcall	.-356    	; 0x4e <i2cSendByte>
 1b2:	40 e2       	ldi	r20, 0x20	; 32
 1b4:	6d e0       	ldi	r22, 0x0D	; 13
 1b6:	80 e9       	ldi	r24, 0x90	; 144
 1b8:	4a df       	rcall	.-364    	; 0x4e <i2cSendByte>
 1ba:	4f e0       	ldi	r20, 0x0F	; 15
 1bc:	6f e0       	ldi	r22, 0x0F	; 15
 1be:	80 e9       	ldi	r24, 0x90	; 144
 1c0:	46 df       	rcall	.-372    	; 0x4e <i2cSendByte>
 1c2:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <sw2>
 1c6:	40 e8       	ldi	r20, 0x80	; 128
 1c8:	81 ff       	sbrs	r24, 1
 1ca:	40 e0       	ldi	r20, 0x00	; 0
 1cc:	65 e2       	ldi	r22, 0x25	; 37
 1ce:	80 e9       	ldi	r24, 0x90	; 144
 1d0:	3e cf       	rjmp	.-388    	; 0x4e <i2cSendByte>
 1d2:	4c 7f       	andi	r20, 0xFC	; 252
 1d4:	41 60       	ori	r20, 0x01	; 1
 1d6:	b3 cf       	rjmp	.-154    	; 0x13e <configureDAC+0x3a>
 1d8:	43 60       	ori	r20, 0x03	; 3
 1da:	b1 cf       	rjmp	.-158    	; 0x13e <configureDAC+0x3a>
 1dc:	43 7f       	andi	r20, 0xF3	; 243
 1de:	44 60       	ori	r20, 0x04	; 4
 1e0:	4f 7c       	andi	r20, 0xCF	; 207
 1e2:	40 61       	ori	r20, 0x10	; 16
 1e4:	b7 cf       	rjmp	.-146    	; 0x154 <configureDAC+0x50>
 1e6:	43 7c       	andi	r20, 0xC3	; 195
 1e8:	b5 cf       	rjmp	.-150    	; 0x154 <configureDAC+0x50>

000001ea <readSwitchStates>:
 1ea:	cf 93       	push	r28
 1ec:	62 e1       	ldi	r22, 0x12	; 18
 1ee:	80 e4       	ldi	r24, 0x40	; 64
 1f0:	40 df       	rcall	.-384    	; 0x72 <i2cReceiveByte>
 1f2:	c8 2f       	mov	r28, r24
 1f4:	63 e1       	ldi	r22, 0x13	; 19
 1f6:	80 e4       	ldi	r24, 0x40	; 64
 1f8:	3c df       	rcall	.-392    	; 0x72 <i2cReceiveByte>
 1fa:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <sw1>
 1fe:	9c 13       	cpse	r25, r28
 200:	04 c0       	rjmp	.+8      	; 0x20a <readSwitchStates+0x20>
 202:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <sw2>
 206:	98 17       	cp	r25, r24
 208:	31 f0       	breq	.+12     	; 0x216 <readSwitchStates+0x2c>
 20a:	c0 93 68 00 	sts	0x0068, r28	; 0x800068 <sw1>
 20e:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <sw2>
 212:	cf 91       	pop	r28
 214:	77 cf       	rjmp	.-274    	; 0x104 <configureDAC>
 216:	cf 91       	pop	r28
 218:	08 95       	ret

0000021a <initialize>:
 21a:	bc 98       	cbi	0x17, 4	; 23
 21c:	c4 98       	cbi	0x18, 4	; 24
 21e:	16 b8       	out	0x06, r1	; 6
 220:	17 b8       	out	0x07, r1	; 7
 222:	3d 9a       	sbi	0x07, 5	; 7
 224:	38 98       	cbi	0x07, 0	; 7
 226:	39 9a       	sbi	0x07, 1	; 7
 228:	3a 98       	cbi	0x07, 2	; 7
 22a:	3b 98       	cbi	0x07, 3	; 7
 22c:	3e 98       	cbi	0x07, 6	; 7
 22e:	3f 98       	cbi	0x07, 7	; 7
 230:	37 98       	cbi	0x06, 7	; 6
 232:	32 9a       	sbi	0x06, 2	; 6
 234:	31 9a       	sbi	0x06, 1	; 6
 236:	30 9a       	sbi	0x06, 0	; 6
 238:	37 9a       	sbi	0x06, 7	; 6
 23a:	3c d0       	rcall	.+120    	; 0x2b4 <i2c_init>
 23c:	8f ec       	ldi	r24, 0xCF	; 207
 23e:	97 e0       	ldi	r25, 0x07	; 7
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <initialize+0x26>
 244:	00 c0       	rjmp	.+0      	; 0x246 <initialize+0x2c>
 246:	00 00       	nop
 248:	40 e2       	ldi	r20, 0x20	; 32
 24a:	6a e0       	ldi	r22, 0x0A	; 10
 24c:	80 e4       	ldi	r24, 0x40	; 64
 24e:	ff de       	rcall	.-514    	; 0x4e <i2cSendByte>
 250:	8f ec       	ldi	r24, 0xCF	; 207
 252:	97 e0       	ldi	r25, 0x07	; 7
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <initialize+0x3a>
 258:	00 c0       	rjmp	.+0      	; 0x25a <initialize+0x40>
 25a:	00 00       	nop
 25c:	4f ef       	ldi	r20, 0xFF	; 255
 25e:	6c e0       	ldi	r22, 0x0C	; 12
 260:	80 e4       	ldi	r24, 0x40	; 64
 262:	f5 de       	rcall	.-534    	; 0x4e <i2cSendByte>
 264:	4f ef       	ldi	r20, 0xFF	; 255
 266:	6d e0       	ldi	r22, 0x0D	; 13
 268:	80 e4       	ldi	r24, 0x40	; 64
 26a:	f1 de       	rcall	.-542    	; 0x4e <i2cSendByte>
 26c:	8f e1       	ldi	r24, 0x1F	; 31
 26e:	9e e4       	ldi	r25, 0x4E	; 78
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <__stack+0x11>
 274:	00 c0       	rjmp	.+0      	; 0x276 <__stack+0x17>
 276:	00 00       	nop
 278:	b8 cf       	rjmp	.-144    	; 0x1ea <readSwitchStates>

0000027a <main>:
 27a:	b9 9a       	sbi	0x17, 1	; 23
 27c:	c1 98       	cbi	0x18, 1	; 24
 27e:	2f ef       	ldi	r18, 0xFF	; 255
 280:	8e e9       	ldi	r24, 0x9E	; 158
 282:	94 e2       	ldi	r25, 0x24	; 36
 284:	21 50       	subi	r18, 0x01	; 1
 286:	80 40       	sbci	r24, 0x00	; 0
 288:	90 40       	sbci	r25, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0xa>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x14>
 28e:	00 00       	nop
 290:	c1 9a       	sbi	0x18, 1	; 24
 292:	c3 df       	rcall	.-122    	; 0x21a <initialize>
 294:	37 df       	rcall	.-402    	; 0x104 <configureDAC>
 296:	c0 e0       	ldi	r28, 0x00	; 0
 298:	1b df       	rcall	.-458    	; 0xd0 <getVolume>
 29a:	08 df       	rcall	.-496    	; 0xac <setVolume>
 29c:	8f e5       	ldi	r24, 0x5F	; 95
 29e:	9a ee       	ldi	r25, 0xEA	; 234
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <main+0x26>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <main+0x2c>
 2a6:	00 00       	nop
 2a8:	ca 30       	cpi	r28, 0x0A	; 10
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <main+0x36>
 2ac:	9e df       	rcall	.-196    	; 0x1ea <readSwitchStates>
 2ae:	c0 e0       	ldi	r28, 0x00	; 0
 2b0:	cf 5f       	subi	r28, 0xFF	; 255
 2b2:	f2 cf       	rjmp	.-28     	; 0x298 <main+0x1e>

000002b4 <i2c_init>:
 2b4:	c0 9a       	sbi	0x18, 0	; 24
 2b6:	c2 9a       	sbi	0x18, 2	; 24
 2b8:	ba 9a       	sbi	0x17, 2	; 23
 2ba:	b8 9a       	sbi	0x17, 0	; 23
 2bc:	8f ef       	ldi	r24, 0xFF	; 255
 2be:	8f b9       	out	0x0f, r24	; 15
 2c0:	8a e2       	ldi	r24, 0x2A	; 42
 2c2:	8d b9       	out	0x0d, r24	; 13
 2c4:	80 ef       	ldi	r24, 0xF0	; 240
 2c6:	8e b9       	out	0x0e, r24	; 14
 2c8:	08 95       	ret

000002ca <i2c_get_state_info>:
 2ca:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <USI_I2C_state>
 2ce:	08 95       	ret

000002d0 <USI_I2C_Master_Transfer>:
 2d0:	8e b9       	out	0x0e, r24	; 14
 2d2:	8b e2       	ldi	r24, 0x2B	; 43
 2d4:	93 e0       	ldi	r25, 0x03	; 3
 2d6:	9a 95       	dec	r25
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <USI_I2C_Master_Transfer+0x6>
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <USI_I2C_Master_Transfer+0xc>
 2dc:	8d b9       	out	0x0d, r24	; 13
 2de:	b2 9b       	sbis	0x16, 2	; 22
 2e0:	fe cf       	rjmp	.-4      	; 0x2de <USI_I2C_Master_Transfer+0xe>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <USI_I2C_Master_Transfer+0x14>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <USI_I2C_Master_Transfer+0x16>
 2e6:	00 00       	nop
 2e8:	8d b9       	out	0x0d, r24	; 13
 2ea:	76 9b       	sbis	0x0e, 6	; 14
 2ec:	f3 cf       	rjmp	.-26     	; 0x2d4 <USI_I2C_Master_Transfer+0x4>
 2ee:	83 e0       	ldi	r24, 0x03	; 3
 2f0:	8a 95       	dec	r24
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <USI_I2C_Master_Transfer+0x20>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <USI_I2C_Master_Transfer+0x26>
 2f6:	8f b1       	in	r24, 0x0f	; 15
 2f8:	9f ef       	ldi	r25, 0xFF	; 255
 2fa:	9f b9       	out	0x0f, r25	; 15
 2fc:	b8 9a       	sbi	0x17, 0	; 23
 2fe:	08 95       	ret

00000300 <i2c_stop>:
 300:	c0 98       	cbi	0x18, 0	; 24
 302:	c2 9a       	sbi	0x18, 2	; 24
 304:	b2 9b       	sbis	0x16, 2	; 22
 306:	fe cf       	rjmp	.-4      	; 0x304 <i2c_stop+0x4>
 308:	00 c0       	rjmp	.+0      	; 0x30a <i2c_stop+0xa>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <i2c_stop+0xc>
 30c:	00 00       	nop
 30e:	c0 9a       	sbi	0x18, 0	; 24
 310:	83 e0       	ldi	r24, 0x03	; 3
 312:	8a 95       	dec	r24
 314:	f1 f7       	brne	.-4      	; 0x312 <i2c_stop+0x12>
 316:	00 c0       	rjmp	.+0      	; 0x318 <i2c_stop+0x18>
 318:	75 99       	sbic	0x0e, 5	; 14
 31a:	05 c0       	rjmp	.+10     	; 0x326 <i2c_stop+0x26>
 31c:	84 e0       	ldi	r24, 0x04	; 4
 31e:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <USI_I2C_state>
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	08 95       	ret
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	08 95       	ret

0000032a <i2c_write>:
 32a:	b8 9a       	sbi	0x17, 0	; 23
 32c:	c2 98       	cbi	0x18, 2	; 24
 32e:	8f b9       	out	0x0f, r24	; 15
 330:	80 ef       	ldi	r24, 0xF0	; 240
 332:	ce df       	rcall	.-100    	; 0x2d0 <USI_I2C_Master_Transfer>
 334:	b8 98       	cbi	0x17, 0	; 23
 336:	8e ef       	ldi	r24, 0xFE	; 254
 338:	cb df       	rcall	.-106    	; 0x2d0 <USI_I2C_Master_Transfer>
 33a:	88 23       	and	r24, r24
 33c:	19 f0       	breq	.+6      	; 0x344 <i2c_write+0x1a>
 33e:	92 e0       	ldi	r25, 0x02	; 2
 340:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <USI_I2C_state>
 344:	08 95       	ret

00000346 <i2c_start>:
 346:	c2 9a       	sbi	0x18, 2	; 24
 348:	c2 9b       	sbis	0x18, 2	; 24
 34a:	fe cf       	rjmp	.-4      	; 0x348 <i2c_start+0x2>
 34c:	93 e0       	ldi	r25, 0x03	; 3
 34e:	9a 95       	dec	r25
 350:	f1 f7       	brne	.-4      	; 0x34e <i2c_start+0x8>
 352:	00 c0       	rjmp	.+0      	; 0x354 <i2c_start+0xe>
 354:	c0 98       	cbi	0x18, 0	; 24
 356:	00 c0       	rjmp	.+0      	; 0x358 <i2c_start+0x12>
 358:	00 c0       	rjmp	.+0      	; 0x35a <i2c_start+0x14>
 35a:	00 00       	nop
 35c:	c2 98       	cbi	0x18, 2	; 24
 35e:	00 c0       	rjmp	.+0      	; 0x360 <i2c_start+0x1a>
 360:	00 c0       	rjmp	.+0      	; 0x362 <i2c_start+0x1c>
 362:	00 00       	nop
 364:	c0 9a       	sbi	0x18, 0	; 24
 366:	77 99       	sbic	0x0e, 7	; 14
 368:	05 c0       	rjmp	.+10     	; 0x374 <i2c_start+0x2e>
 36a:	83 e0       	ldi	r24, 0x03	; 3
 36c:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <USI_I2C_state>
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	08 95       	ret
 374:	da df       	rcall	.-76     	; 0x32a <i2c_write>
 376:	81 11       	cpse	r24, r1
 378:	04 c0       	rjmp	.+8      	; 0x382 <i2c_start+0x3c>
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <USI_I2C_state>
 380:	08 95       	ret
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	08 95       	ret

00000386 <i2c_start_wait>:
 386:	cf 93       	push	r28
 388:	c8 2f       	mov	r28, r24
 38a:	dd df       	rcall	.-70     	; 0x346 <i2c_start>
 38c:	81 30       	cpi	r24, 0x01	; 1
 38e:	49 f4       	brne	.+18     	; 0x3a2 <i2c_start_wait+0x1c>
 390:	b7 df       	rcall	.-146    	; 0x300 <i2c_stop>
 392:	8f e1       	ldi	r24, 0x1F	; 31
 394:	9e e4       	ldi	r25, 0x4E	; 78
 396:	01 97       	sbiw	r24, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <i2c_start_wait+0x10>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <i2c_start_wait+0x16>
 39c:	00 00       	nop
 39e:	8c 2f       	mov	r24, r28
 3a0:	f2 df       	rcall	.-28     	; 0x386 <i2c_start_wait>
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	cf 91       	pop	r28
 3a6:	08 95       	ret

000003a8 <i2c_read>:
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	d8 2f       	mov	r29, r24
 3ae:	b8 98       	cbi	0x17, 0	; 23
 3b0:	c2 98       	cbi	0x18, 2	; 24
 3b2:	1f b8       	out	0x0f, r1	; 15
 3b4:	80 ef       	ldi	r24, 0xF0	; 240
 3b6:	8c df       	rcall	.-232    	; 0x2d0 <USI_I2C_Master_Transfer>
 3b8:	c8 2f       	mov	r28, r24
 3ba:	b8 9a       	sbi	0x17, 0	; 23
 3bc:	d1 11       	cpse	r29, r1
 3be:	07 c0       	rjmp	.+14     	; 0x3ce <i2c_read+0x26>
 3c0:	1f b8       	out	0x0f, r1	; 15
 3c2:	8e ef       	ldi	r24, 0xFE	; 254
 3c4:	85 df       	rcall	.-246    	; 0x2d0 <USI_I2C_Master_Transfer>
 3c6:	8c 2f       	mov	r24, r28
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	08 95       	ret
 3ce:	8f ef       	ldi	r24, 0xFF	; 255
 3d0:	8f b9       	out	0x0f, r24	; 15
 3d2:	f7 cf       	rjmp	.-18     	; 0x3c2 <i2c_read+0x1a>

000003d4 <swapfunc>:
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	dc 01       	movw	r26, r24
 3da:	2d 91       	ld	r18, X+
 3dc:	fb 01       	movw	r30, r22
 3de:	31 91       	ld	r19, Z+
 3e0:	ec 01       	movw	r28, r24
 3e2:	38 83       	st	Y, r19
 3e4:	eb 01       	movw	r28, r22
 3e6:	28 83       	st	Y, r18
 3e8:	41 50       	subi	r20, 0x01	; 1
 3ea:	51 09       	sbc	r21, r1
 3ec:	cd 01       	movw	r24, r26
 3ee:	bf 01       	movw	r22, r30
 3f0:	14 16       	cp	r1, r20
 3f2:	15 06       	cpc	r1, r21
 3f4:	8c f3       	brlt	.-30     	; 0x3d8 <swapfunc+0x4>
 3f6:	df 91       	pop	r29
 3f8:	cf 91       	pop	r28
 3fa:	08 95       	ret

000003fc <med3>:
 3fc:	b0 e0       	ldi	r27, 0x00	; 0
 3fe:	a0 e0       	ldi	r26, 0x00	; 0
 400:	e3 e0       	ldi	r30, 0x03	; 3
 402:	f2 e0       	ldi	r31, 0x02	; 2
 404:	bd c1       	rjmp	.+890    	; 0x780 <__prologue_saves__+0x14>
 406:	6c 01       	movw	r12, r24
 408:	d6 2f       	mov	r29, r22
 40a:	c7 2f       	mov	r28, r23
 40c:	8a 01       	movw	r16, r20
 40e:	79 01       	movw	r14, r18
 410:	f9 01       	movw	r30, r18
 412:	09 95       	icall
 414:	b8 01       	movw	r22, r16
 416:	97 ff       	sbrs	r25, 7
 418:	14 c0       	rjmp	.+40     	; 0x442 <__FUSE_REGION_LENGTH__+0x42>
 41a:	8d 2f       	mov	r24, r29
 41c:	9c 2f       	mov	r25, r28
 41e:	f7 01       	movw	r30, r14
 420:	09 95       	icall
 422:	97 fd       	sbrc	r25, 7
 424:	08 c0       	rjmp	.+16     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 426:	b8 01       	movw	r22, r16
 428:	c6 01       	movw	r24, r12
 42a:	f7 01       	movw	r30, r14
 42c:	09 95       	icall
 42e:	97 fd       	sbrc	r25, 7
 430:	15 c0       	rjmp	.+42     	; 0x45c <__FUSE_REGION_LENGTH__+0x5c>
 432:	dc 2d       	mov	r29, r12
 434:	cd 2d       	mov	r28, r13
 436:	8d 2f       	mov	r24, r29
 438:	9c 2f       	mov	r25, r28
 43a:	cd b7       	in	r28, 0x3d	; 61
 43c:	de b7       	in	r29, 0x3e	; 62
 43e:	e8 e0       	ldi	r30, 0x08	; 8
 440:	bb c1       	rjmp	.+886    	; 0x7b8 <__epilogue_restores__+0x14>
 442:	8d 2f       	mov	r24, r29
 444:	9c 2f       	mov	r25, r28
 446:	f7 01       	movw	r30, r14
 448:	09 95       	icall
 44a:	18 16       	cp	r1, r24
 44c:	19 06       	cpc	r1, r25
 44e:	9c f3       	brlt	.-26     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 450:	b8 01       	movw	r22, r16
 452:	c6 01       	movw	r24, r12
 454:	f7 01       	movw	r30, r14
 456:	09 95       	icall
 458:	97 fd       	sbrc	r25, 7
 45a:	eb cf       	rjmp	.-42     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
 45c:	d0 2f       	mov	r29, r16
 45e:	c1 2f       	mov	r28, r17
 460:	ea cf       	rjmp	.-44     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>

00000462 <qsort>:
 462:	a8 e0       	ldi	r26, 0x08	; 8
 464:	b0 e0       	ldi	r27, 0x00	; 0
 466:	e6 e3       	ldi	r30, 0x36	; 54
 468:	f2 e0       	ldi	r31, 0x02	; 2
 46a:	80 c1       	rjmp	.+768    	; 0x76c <__prologue_saves__>
 46c:	8c 01       	movw	r16, r24
 46e:	6b 01       	movw	r12, r22
 470:	58 87       	std	Y+8, r21	; 0x08
 472:	4f 83       	std	Y+7, r20	; 0x07
 474:	59 01       	movw	r10, r18
 476:	9a 01       	movw	r18, r20
 478:	31 95       	neg	r19
 47a:	21 95       	neg	r18
 47c:	31 09       	sbc	r19, r1
 47e:	3e 83       	std	Y+6, r19	; 0x06
 480:	2d 83       	std	Y+5, r18	; 0x05
 482:	8f 81       	ldd	r24, Y+7	; 0x07
 484:	98 85       	ldd	r25, Y+8	; 0x08
 486:	80 0f       	add	r24, r16
 488:	91 1f       	adc	r25, r17
 48a:	9a 83       	std	Y+2, r25	; 0x02
 48c:	89 83       	std	Y+1, r24	; 0x01
 48e:	97 e0       	ldi	r25, 0x07	; 7
 490:	c9 16       	cp	r12, r25
 492:	d1 04       	cpc	r13, r1
 494:	58 f5       	brcc	.+86     	; 0x4ec <qsort+0x8a>
 496:	69 80       	ldd	r6, Y+1	; 0x01
 498:	7a 80       	ldd	r7, Y+2	; 0x02
 49a:	c6 01       	movw	r24, r12
 49c:	6f 81       	ldd	r22, Y+7	; 0x07
 49e:	78 85       	ldd	r23, Y+8	; 0x08
 4a0:	40 d1       	rcall	.+640    	; 0x722 <__mulhi3>
 4a2:	48 01       	movw	r8, r16
 4a4:	88 0e       	add	r8, r24
 4a6:	99 1e       	adc	r9, r25
 4a8:	68 14       	cp	r6, r8
 4aa:	79 04       	cpc	r7, r9
 4ac:	18 f0       	brcs	.+6      	; 0x4b4 <qsort+0x52>
 4ae:	28 96       	adiw	r28, 0x08	; 8
 4b0:	e2 e1       	ldi	r30, 0x12	; 18
 4b2:	78 c1       	rjmp	.+752    	; 0x7a4 <__epilogue_restores__>
 4b4:	73 01       	movw	r14, r6
 4b6:	12 c0       	rjmp	.+36     	; 0x4dc <qsort+0x7a>
 4b8:	67 01       	movw	r12, r14
 4ba:	2f 81       	ldd	r18, Y+7	; 0x07
 4bc:	38 85       	ldd	r19, Y+8	; 0x08
 4be:	c2 1a       	sub	r12, r18
 4c0:	d3 0a       	sbc	r13, r19
 4c2:	b7 01       	movw	r22, r14
 4c4:	c6 01       	movw	r24, r12
 4c6:	f5 01       	movw	r30, r10
 4c8:	09 95       	icall
 4ca:	18 16       	cp	r1, r24
 4cc:	19 06       	cpc	r1, r25
 4ce:	4c f4       	brge	.+18     	; 0x4e2 <qsort+0x80>
 4d0:	4f 81       	ldd	r20, Y+7	; 0x07
 4d2:	58 85       	ldd	r21, Y+8	; 0x08
 4d4:	b6 01       	movw	r22, r12
 4d6:	c7 01       	movw	r24, r14
 4d8:	7d df       	rcall	.-262    	; 0x3d4 <swapfunc>
 4da:	76 01       	movw	r14, r12
 4dc:	0e 15       	cp	r16, r14
 4de:	1f 05       	cpc	r17, r15
 4e0:	58 f3       	brcs	.-42     	; 0x4b8 <qsort+0x56>
 4e2:	ef 81       	ldd	r30, Y+7	; 0x07
 4e4:	f8 85       	ldd	r31, Y+8	; 0x08
 4e6:	6e 0e       	add	r6, r30
 4e8:	7f 1e       	adc	r7, r31
 4ea:	de cf       	rjmp	.-68     	; 0x4a8 <qsort+0x46>
 4ec:	c6 01       	movw	r24, r12
 4ee:	96 95       	lsr	r25
 4f0:	87 95       	ror	r24
 4f2:	6f 81       	ldd	r22, Y+7	; 0x07
 4f4:	78 85       	ldd	r23, Y+8	; 0x08
 4f6:	15 d1       	rcall	.+554    	; 0x722 <__mulhi3>
 4f8:	38 01       	movw	r6, r16
 4fa:	68 0e       	add	r6, r24
 4fc:	79 1e       	adc	r7, r25
 4fe:	c6 01       	movw	r24, r12
 500:	01 97       	sbiw	r24, 0x01	; 1
 502:	6f 81       	ldd	r22, Y+7	; 0x07
 504:	78 85       	ldd	r23, Y+8	; 0x08
 506:	0d d1       	rcall	.+538    	; 0x722 <__mulhi3>
 508:	78 01       	movw	r14, r16
 50a:	e8 0e       	add	r14, r24
 50c:	f9 1e       	adc	r15, r25
 50e:	f7 e0       	ldi	r31, 0x07	; 7
 510:	cf 16       	cp	r12, r31
 512:	d1 04       	cpc	r13, r1
 514:	c9 f1       	breq	.+114    	; 0x588 <qsort+0x126>
 516:	c7 01       	movw	r24, r14
 518:	28 01       	movw	r4, r16
 51a:	29 e2       	ldi	r18, 0x29	; 41
 51c:	c2 16       	cp	r12, r18
 51e:	d1 04       	cpc	r13, r1
 520:	68 f1       	brcs	.+90     	; 0x57c <qsort+0x11a>
 522:	c6 01       	movw	r24, r12
 524:	23 e0       	ldi	r18, 0x03	; 3
 526:	96 95       	lsr	r25
 528:	87 95       	ror	r24
 52a:	2a 95       	dec	r18
 52c:	e1 f7       	brne	.-8      	; 0x526 <qsort+0xc4>
 52e:	6f 81       	ldd	r22, Y+7	; 0x07
 530:	78 85       	ldd	r23, Y+8	; 0x08
 532:	f7 d0       	rcall	.+494    	; 0x722 <__mulhi3>
 534:	4c 01       	movw	r8, r24
 536:	1c 01       	movw	r2, r24
 538:	22 0c       	add	r2, r2
 53a:	33 1c       	adc	r3, r3
 53c:	a8 01       	movw	r20, r16
 53e:	42 0d       	add	r20, r2
 540:	53 1d       	adc	r21, r3
 542:	b8 01       	movw	r22, r16
 544:	68 0f       	add	r22, r24
 546:	79 1f       	adc	r23, r25
 548:	95 01       	movw	r18, r10
 54a:	c8 01       	movw	r24, r16
 54c:	57 df       	rcall	.-338    	; 0x3fc <med3>
 54e:	2c 01       	movw	r4, r24
 550:	a3 01       	movw	r20, r6
 552:	48 0d       	add	r20, r8
 554:	59 1d       	adc	r21, r9
 556:	91 94       	neg	r9
 558:	81 94       	neg	r8
 55a:	91 08       	sbc	r9, r1
 55c:	95 01       	movw	r18, r10
 55e:	b3 01       	movw	r22, r6
 560:	c3 01       	movw	r24, r6
 562:	88 0d       	add	r24, r8
 564:	99 1d       	adc	r25, r9
 566:	4a df       	rcall	.-364    	; 0x3fc <med3>
 568:	3c 01       	movw	r6, r24
 56a:	b7 01       	movw	r22, r14
 56c:	68 0d       	add	r22, r8
 56e:	79 1d       	adc	r23, r9
 570:	95 01       	movw	r18, r10
 572:	a7 01       	movw	r20, r14
 574:	c7 01       	movw	r24, r14
 576:	82 19       	sub	r24, r2
 578:	93 09       	sbc	r25, r3
 57a:	40 df       	rcall	.-384    	; 0x3fc <med3>
 57c:	95 01       	movw	r18, r10
 57e:	ac 01       	movw	r20, r24
 580:	b3 01       	movw	r22, r6
 582:	c2 01       	movw	r24, r4
 584:	3b df       	rcall	.-394    	; 0x3fc <med3>
 586:	3c 01       	movw	r6, r24
 588:	4f 81       	ldd	r20, Y+7	; 0x07
 58a:	58 85       	ldd	r21, Y+8	; 0x08
 58c:	b3 01       	movw	r22, r6
 58e:	c8 01       	movw	r24, r16
 590:	21 df       	rcall	.-446    	; 0x3d4 <swapfunc>
 592:	69 80       	ldd	r6, Y+1	; 0x01
 594:	7a 80       	ldd	r7, Y+2	; 0x02
 596:	43 01       	movw	r8, r6
 598:	17 01       	movw	r2, r14
 59a:	23 01       	movw	r4, r6
 59c:	1a 82       	std	Y+2, r1	; 0x02
 59e:	19 82       	std	Y+1, r1	; 0x01
 5a0:	e8 14       	cp	r14, r8
 5a2:	f9 04       	cpc	r15, r9
 5a4:	08 f4       	brcc	.+2      	; 0x5a8 <qsort+0x146>
 5a6:	47 c0       	rjmp	.+142    	; 0x636 <qsort+0x1d4>
 5a8:	b8 01       	movw	r22, r16
 5aa:	c4 01       	movw	r24, r8
 5ac:	f5 01       	movw	r30, r10
 5ae:	09 95       	icall
 5b0:	18 16       	cp	r1, r24
 5b2:	19 06       	cpc	r1, r25
 5b4:	44 f1       	brlt	.+80     	; 0x606 <qsort+0x1a4>
 5b6:	89 2b       	or	r24, r25
 5b8:	69 f4       	brne	.+26     	; 0x5d4 <qsort+0x172>
 5ba:	4f 81       	ldd	r20, Y+7	; 0x07
 5bc:	58 85       	ldd	r21, Y+8	; 0x08
 5be:	b4 01       	movw	r22, r8
 5c0:	c2 01       	movw	r24, r4
 5c2:	08 df       	rcall	.-496    	; 0x3d4 <swapfunc>
 5c4:	8f 81       	ldd	r24, Y+7	; 0x07
 5c6:	98 85       	ldd	r25, Y+8	; 0x08
 5c8:	48 0e       	add	r4, r24
 5ca:	59 1e       	adc	r5, r25
 5cc:	e1 e0       	ldi	r30, 0x01	; 1
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	fa 83       	std	Y+2, r31	; 0x02
 5d2:	e9 83       	std	Y+1, r30	; 0x01
 5d4:	2f 81       	ldd	r18, Y+7	; 0x07
 5d6:	38 85       	ldd	r19, Y+8	; 0x08
 5d8:	82 0e       	add	r8, r18
 5da:	93 1e       	adc	r9, r19
 5dc:	e1 cf       	rjmp	.-62     	; 0x5a0 <qsort+0x13e>
 5de:	89 2b       	or	r24, r25
 5e0:	69 f4       	brne	.+26     	; 0x5fc <qsort+0x19a>
 5e2:	4f 81       	ldd	r20, Y+7	; 0x07
 5e4:	58 85       	ldd	r21, Y+8	; 0x08
 5e6:	b1 01       	movw	r22, r2
 5e8:	c7 01       	movw	r24, r14
 5ea:	f4 de       	rcall	.-536    	; 0x3d4 <swapfunc>
 5ec:	2d 81       	ldd	r18, Y+5	; 0x05
 5ee:	3e 81       	ldd	r19, Y+6	; 0x06
 5f0:	22 0e       	add	r2, r18
 5f2:	33 1e       	adc	r3, r19
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	9a 83       	std	Y+2, r25	; 0x02
 5fa:	89 83       	std	Y+1, r24	; 0x01
 5fc:	eb 80       	ldd	r14, Y+3	; 0x03
 5fe:	fc 80       	ldd	r15, Y+4	; 0x04
 600:	e8 14       	cp	r14, r8
 602:	f9 04       	cpc	r15, r9
 604:	c0 f0       	brcs	.+48     	; 0x636 <qsort+0x1d4>
 606:	b8 01       	movw	r22, r16
 608:	c7 01       	movw	r24, r14
 60a:	f5 01       	movw	r30, r10
 60c:	09 95       	icall
 60e:	2d 81       	ldd	r18, Y+5	; 0x05
 610:	3e 81       	ldd	r19, Y+6	; 0x06
 612:	2e 0d       	add	r18, r14
 614:	3f 1d       	adc	r19, r15
 616:	3c 83       	std	Y+4, r19	; 0x04
 618:	2b 83       	std	Y+3, r18	; 0x03
 61a:	97 ff       	sbrs	r25, 7
 61c:	e0 cf       	rjmp	.-64     	; 0x5de <qsort+0x17c>
 61e:	4f 81       	ldd	r20, Y+7	; 0x07
 620:	58 85       	ldd	r21, Y+8	; 0x08
 622:	b7 01       	movw	r22, r14
 624:	c4 01       	movw	r24, r8
 626:	d6 de       	rcall	.-596    	; 0x3d4 <swapfunc>
 628:	eb 80       	ldd	r14, Y+3	; 0x03
 62a:	fc 80       	ldd	r15, Y+4	; 0x04
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	9a 83       	std	Y+2, r25	; 0x02
 632:	89 83       	std	Y+1, r24	; 0x01
 634:	cf cf       	rjmp	.-98     	; 0x5d4 <qsort+0x172>
 636:	c6 01       	movw	r24, r12
 638:	6f 81       	ldd	r22, Y+7	; 0x07
 63a:	78 85       	ldd	r23, Y+8	; 0x08
 63c:	72 d0       	rcall	.+228    	; 0x722 <__mulhi3>
 63e:	80 0f       	add	r24, r16
 640:	91 1f       	adc	r25, r17
 642:	9c 83       	std	Y+4, r25	; 0x04
 644:	8b 83       	std	Y+3, r24	; 0x03
 646:	e9 81       	ldd	r30, Y+1	; 0x01
 648:	fa 81       	ldd	r31, Y+2	; 0x02
 64a:	ef 2b       	or	r30, r31
 64c:	11 f5       	brne	.+68     	; 0x692 <qsort+0x230>
 64e:	2b 81       	ldd	r18, Y+3	; 0x03
 650:	3c 81       	ldd	r19, Y+4	; 0x04
 652:	62 16       	cp	r6, r18
 654:	73 06       	cpc	r7, r19
 656:	08 f0       	brcs	.+2      	; 0x65a <qsort+0x1f8>
 658:	2a cf       	rjmp	.-428    	; 0x4ae <qsort+0x4c>
 65a:	73 01       	movw	r14, r6
 65c:	12 c0       	rjmp	.+36     	; 0x682 <qsort+0x220>
 65e:	67 01       	movw	r12, r14
 660:	8f 81       	ldd	r24, Y+7	; 0x07
 662:	98 85       	ldd	r25, Y+8	; 0x08
 664:	c8 1a       	sub	r12, r24
 666:	d9 0a       	sbc	r13, r25
 668:	b7 01       	movw	r22, r14
 66a:	c6 01       	movw	r24, r12
 66c:	f5 01       	movw	r30, r10
 66e:	09 95       	icall
 670:	18 16       	cp	r1, r24
 672:	19 06       	cpc	r1, r25
 674:	4c f4       	brge	.+18     	; 0x688 <qsort+0x226>
 676:	4f 81       	ldd	r20, Y+7	; 0x07
 678:	58 85       	ldd	r21, Y+8	; 0x08
 67a:	b6 01       	movw	r22, r12
 67c:	c7 01       	movw	r24, r14
 67e:	aa de       	rcall	.-684    	; 0x3d4 <swapfunc>
 680:	76 01       	movw	r14, r12
 682:	0e 15       	cp	r16, r14
 684:	1f 05       	cpc	r17, r15
 686:	58 f3       	brcs	.-42     	; 0x65e <qsort+0x1fc>
 688:	2f 81       	ldd	r18, Y+7	; 0x07
 68a:	38 85       	ldd	r19, Y+8	; 0x08
 68c:	62 0e       	add	r6, r18
 68e:	73 1e       	adc	r7, r19
 690:	de cf       	rjmp	.-68     	; 0x64e <qsort+0x1ec>
 692:	64 01       	movw	r12, r8
 694:	c4 18       	sub	r12, r4
 696:	d5 08       	sbc	r13, r5
 698:	a2 01       	movw	r20, r4
 69a:	40 1b       	sub	r20, r16
 69c:	51 0b       	sbc	r21, r17
 69e:	c4 16       	cp	r12, r20
 6a0:	d5 06       	cpc	r13, r21
 6a2:	0c f4       	brge	.+2      	; 0x6a6 <qsort+0x244>
 6a4:	a6 01       	movw	r20, r12
 6a6:	14 16       	cp	r1, r20
 6a8:	15 06       	cpc	r1, r21
 6aa:	2c f4       	brge	.+10     	; 0x6b6 <qsort+0x254>
 6ac:	b4 01       	movw	r22, r8
 6ae:	64 1b       	sub	r22, r20
 6b0:	75 0b       	sbc	r23, r21
 6b2:	c8 01       	movw	r24, r16
 6b4:	8f de       	rcall	.-738    	; 0x3d4 <swapfunc>
 6b6:	c1 01       	movw	r24, r2
 6b8:	8e 19       	sub	r24, r14
 6ba:	9f 09       	sbc	r25, r15
 6bc:	7c 01       	movw	r14, r24
 6be:	4b 81       	ldd	r20, Y+3	; 0x03
 6c0:	5c 81       	ldd	r21, Y+4	; 0x04
 6c2:	42 19       	sub	r20, r2
 6c4:	53 09       	sbc	r21, r3
 6c6:	ef 81       	ldd	r30, Y+7	; 0x07
 6c8:	f8 85       	ldd	r31, Y+8	; 0x08
 6ca:	4e 1b       	sub	r20, r30
 6cc:	5f 0b       	sbc	r21, r31
 6ce:	84 17       	cp	r24, r20
 6d0:	95 07       	cpc	r25, r21
 6d2:	08 f4       	brcc	.+2      	; 0x6d6 <qsort+0x274>
 6d4:	ac 01       	movw	r20, r24
 6d6:	14 16       	cp	r1, r20
 6d8:	15 06       	cpc	r1, r21
 6da:	34 f4       	brge	.+12     	; 0x6e8 <qsort+0x286>
 6dc:	6b 81       	ldd	r22, Y+3	; 0x03
 6de:	7c 81       	ldd	r23, Y+4	; 0x04
 6e0:	64 1b       	sub	r22, r20
 6e2:	75 0b       	sbc	r23, r21
 6e4:	c4 01       	movw	r24, r8
 6e6:	76 de       	rcall	.-788    	; 0x3d4 <swapfunc>
 6e8:	2f 81       	ldd	r18, Y+7	; 0x07
 6ea:	38 85       	ldd	r19, Y+8	; 0x08
 6ec:	2c 15       	cp	r18, r12
 6ee:	3d 05       	cpc	r19, r13
 6f0:	40 f4       	brcc	.+16     	; 0x702 <qsort+0x2a0>
 6f2:	c6 01       	movw	r24, r12
 6f4:	b9 01       	movw	r22, r18
 6f6:	26 d0       	rcall	.+76     	; 0x744 <__udivmodhi4>
 6f8:	95 01       	movw	r18, r10
 6fa:	4f 81       	ldd	r20, Y+7	; 0x07
 6fc:	58 85       	ldd	r21, Y+8	; 0x08
 6fe:	c8 01       	movw	r24, r16
 700:	b0 de       	rcall	.-672    	; 0x462 <qsort>
 702:	8f 81       	ldd	r24, Y+7	; 0x07
 704:	98 85       	ldd	r25, Y+8	; 0x08
 706:	8e 15       	cp	r24, r14
 708:	9f 05       	cpc	r25, r15
 70a:	08 f0       	brcs	.+2      	; 0x70e <qsort+0x2ac>
 70c:	d0 ce       	rjmp	.-608    	; 0x4ae <qsort+0x4c>
 70e:	0b 81       	ldd	r16, Y+3	; 0x03
 710:	1c 81       	ldd	r17, Y+4	; 0x04
 712:	0e 19       	sub	r16, r14
 714:	1f 09       	sbc	r17, r15
 716:	c7 01       	movw	r24, r14
 718:	6f 81       	ldd	r22, Y+7	; 0x07
 71a:	78 85       	ldd	r23, Y+8	; 0x08
 71c:	13 d0       	rcall	.+38     	; 0x744 <__udivmodhi4>
 71e:	6b 01       	movw	r12, r22
 720:	b0 ce       	rjmp	.-672    	; 0x482 <qsort+0x20>

00000722 <__mulhi3>:
 722:	00 24       	eor	r0, r0
 724:	55 27       	eor	r21, r21
 726:	04 c0       	rjmp	.+8      	; 0x730 <__mulhi3+0xe>
 728:	08 0e       	add	r0, r24
 72a:	59 1f       	adc	r21, r25
 72c:	88 0f       	add	r24, r24
 72e:	99 1f       	adc	r25, r25
 730:	00 97       	sbiw	r24, 0x00	; 0
 732:	29 f0       	breq	.+10     	; 0x73e <__mulhi3+0x1c>
 734:	76 95       	lsr	r23
 736:	67 95       	ror	r22
 738:	b8 f3       	brcs	.-18     	; 0x728 <__mulhi3+0x6>
 73a:	71 05       	cpc	r23, r1
 73c:	b9 f7       	brne	.-18     	; 0x72c <__mulhi3+0xa>
 73e:	80 2d       	mov	r24, r0
 740:	95 2f       	mov	r25, r21
 742:	08 95       	ret

00000744 <__udivmodhi4>:
 744:	aa 1b       	sub	r26, r26
 746:	bb 1b       	sub	r27, r27
 748:	51 e1       	ldi	r21, 0x11	; 17
 74a:	07 c0       	rjmp	.+14     	; 0x75a <__udivmodhi4_ep>

0000074c <__udivmodhi4_loop>:
 74c:	aa 1f       	adc	r26, r26
 74e:	bb 1f       	adc	r27, r27
 750:	a6 17       	cp	r26, r22
 752:	b7 07       	cpc	r27, r23
 754:	10 f0       	brcs	.+4      	; 0x75a <__udivmodhi4_ep>
 756:	a6 1b       	sub	r26, r22
 758:	b7 0b       	sbc	r27, r23

0000075a <__udivmodhi4_ep>:
 75a:	88 1f       	adc	r24, r24
 75c:	99 1f       	adc	r25, r25
 75e:	5a 95       	dec	r21
 760:	a9 f7       	brne	.-22     	; 0x74c <__udivmodhi4_loop>
 762:	80 95       	com	r24
 764:	90 95       	com	r25
 766:	bc 01       	movw	r22, r24
 768:	cd 01       	movw	r24, r26
 76a:	08 95       	ret

0000076c <__prologue_saves__>:
 76c:	2f 92       	push	r2
 76e:	3f 92       	push	r3
 770:	4f 92       	push	r4
 772:	5f 92       	push	r5
 774:	6f 92       	push	r6
 776:	7f 92       	push	r7
 778:	8f 92       	push	r8
 77a:	9f 92       	push	r9
 77c:	af 92       	push	r10
 77e:	bf 92       	push	r11
 780:	cf 92       	push	r12
 782:	df 92       	push	r13
 784:	ef 92       	push	r14
 786:	ff 92       	push	r15
 788:	0f 93       	push	r16
 78a:	1f 93       	push	r17
 78c:	cf 93       	push	r28
 78e:	df 93       	push	r29
 790:	cd b7       	in	r28, 0x3d	; 61
 792:	de b7       	in	r29, 0x3e	; 62
 794:	ca 1b       	sub	r28, r26
 796:	db 0b       	sbc	r29, r27
 798:	0f b6       	in	r0, 0x3f	; 63
 79a:	f8 94       	cli
 79c:	de bf       	out	0x3e, r29	; 62
 79e:	0f be       	out	0x3f, r0	; 63
 7a0:	cd bf       	out	0x3d, r28	; 61
 7a2:	09 94       	ijmp

000007a4 <__epilogue_restores__>:
 7a4:	2a 88       	ldd	r2, Y+18	; 0x12
 7a6:	39 88       	ldd	r3, Y+17	; 0x11
 7a8:	48 88       	ldd	r4, Y+16	; 0x10
 7aa:	5f 84       	ldd	r5, Y+15	; 0x0f
 7ac:	6e 84       	ldd	r6, Y+14	; 0x0e
 7ae:	7d 84       	ldd	r7, Y+13	; 0x0d
 7b0:	8c 84       	ldd	r8, Y+12	; 0x0c
 7b2:	9b 84       	ldd	r9, Y+11	; 0x0b
 7b4:	aa 84       	ldd	r10, Y+10	; 0x0a
 7b6:	b9 84       	ldd	r11, Y+9	; 0x09
 7b8:	c8 84       	ldd	r12, Y+8	; 0x08
 7ba:	df 80       	ldd	r13, Y+7	; 0x07
 7bc:	ee 80       	ldd	r14, Y+6	; 0x06
 7be:	fd 80       	ldd	r15, Y+5	; 0x05
 7c0:	0c 81       	ldd	r16, Y+4	; 0x04
 7c2:	1b 81       	ldd	r17, Y+3	; 0x03
 7c4:	aa 81       	ldd	r26, Y+2	; 0x02
 7c6:	b9 81       	ldd	r27, Y+1	; 0x01
 7c8:	ce 0f       	add	r28, r30
 7ca:	d1 1d       	adc	r29, r1
 7cc:	0f b6       	in	r0, 0x3f	; 63
 7ce:	f8 94       	cli
 7d0:	de bf       	out	0x3e, r29	; 62
 7d2:	0f be       	out	0x3f, r0	; 63
 7d4:	cd bf       	out	0x3d, r28	; 61
 7d6:	ed 01       	movw	r28, r26
 7d8:	08 95       	ret

000007da <_exit>:
 7da:	f8 94       	cli

000007dc <__stop_program>:
 7dc:	ff cf       	rjmp	.-2      	; 0x7dc <__stop_program>
